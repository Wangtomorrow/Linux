linux的命令
	常用的命令
		查看帮助:
			man 命令
			退出帮助目录:   q
		切换目录:cd
			cd 目录
			cd 目录/目录
			cd ..  :上一级目录
			cd / 	:根目录
			cd ~	:回家
		创建目录和删除目录
			mkdir 创建
				mkdir 目录名
				mkdir -p a/b/c
			rmdir 删除
				rmdir 目录名:只能删除一个空目录
			
		展示目录下文件列表(以后使用ll即可)
			ls
			ls:展示的能看见的文件(和目录)的名称
			ls -a:展示所有的文件的名称
				文件前面有"."代表的是隐藏文件
			ls -l:显示文件的详细信息
				简写的方式: ll(★)
			ll -h:友好的显示

		查看当前文件夹下的内存
			df
			-a或--all：包含全部的文件系统；
			--block-size=<区块大小>：以指定的区块大小来显示区块数目；
			-h或--human-readable：以可读性较高的方式来显示信息；
			-H或--si：与-h参数相同，但在计算时是以1000 Bytes为换算单位而非1024 Bytes；
			-i或--inodes：显示inode的信息；
			-k或--kilobytes：指定区块大小为1024字节；
			-l或--local：仅显示本地端的文件系统；
			-m或--megabytes：指定区块大小为1048576字节；
			--no-sync：在取得磁盘使用信息前，不要执行sync指令，此为预设值；
			-P或--portability：使用POSIX的输出格式；
			--sync：在取得磁盘使用信息前，先执行sync指令；
			-t<文件系统类型>或--type=<文件系统类型>：仅显示指定文件系统类型的磁盘信息；
			-T或--print-type：显示文件系统的类型；
			-x<文件系统类型>或--exclude-type=<文件系统类型>：不要显示指定文件系统类型的磁盘信息；
			--help：显示帮助；
			--version：显示版本信息。

			du命令也是查看使用空间的，但是与df命令不同的是Linux du命令是对文件和目录磁盘使用的空间的查看，还是和df命令有一些区别的。
			-a或-all 显示目录中个别文件的大小。
			-b或-bytes 显示目录或文件大小时，以byte为单位。
			-c或--total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。
			-k或--kilobytes 以KB(1024bytes)为单位输出。
			-m或--megabytes 以MB为单位输出。
			-s或--summarize 仅显示总计，只列出最后加总的值。
			-h或--human-readable 以K，M，G为单位，提高信息的可读性。
			-x或--one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。
			-L<符号链接>或--dereference<符号链接> 显示选项中所指定符号链接的源文件大小。
			-S或--separate-dirs 显示个别目录的大小时，并不含其子目录的大小。
			-X<文件>或--exclude-from=<文件> 在<文件>指定目录或文件。
			--exclude=<目录或文件> 略过指定的目录或文件。
			-D或--dereference-args 显示指定符号链接的源文件大小。
			-H或--si 与-h参数相同，但是K，M，G是以1000为换算单位。
			-l或--count-links 重复计算硬件链接的文件。
			
		浏览文件
			cat:显示文件的所有内容
				cat 文件名
			more:分页显示
				空格:下一页
				回车:下一行
			less:分页显示
				可以通过PgUp PgDn 翻页查看
			tail(★★)
				查看一个文件的后面的内容
				tail -显示后几行 文件名
				tail -f 文件名 
					动态的查看
					例如:
						tail -f catalina.xxx.log
					通过 ctrl+c 结束滚动查看
		
		文件的操作
			创建一个文件
				touch 文件名		创建一个空白的文件
			复制文件
				cp 文件 目录/文件名
					例如:
						cp 1.txt 2.txt
						cp 1.txt 1/1.txt
			移动文件(重命名)
				mv 文件 目录/文件名
				mv 文件名 新文件名
					
			删除文件 rm
				rm 文件名:带询问删除
				rm -f 文件名:不带询问删除
				rm -r 目录:带询问的递归删除
				rm -rf 目录:不带询问的递归删除(谨慎使用)
				
			tar:打包或解压 一个文件或者目录(★★)
				常用的组合
					-cvf :打包一个文件或者目录
					-zcvf:打包并压缩一个文件或者目录 压缩的格式:gzip
					-xvf:解压或者打开一个tar文件
				格式:
					tar 参数 文件名 要打包|解压的文件目录
				
				例如:
					将当前目录下的所有文件打包成test1.tar
						tar -cvf test1.tar ./*
					将当前目录下的所有文件打包并压缩成test2.tar.gz
						tar -zcvf test2.tar.gz ./*
					将test1.tar解压到当前目录
						tar -xvf test1.tar 
					将test1.tar解压到b目录
						tar -xvf test1.tar -C b
其他的常用命令
	grep:查找符合条件的字符串(★)
		grep 字符串 
	pwd:显示当前的工作目录
	wget:下载资料
		wget 资源路径
	
vi和vim编辑器(理解中了解)
	编辑普通文件
	三种模式：命令行、插入、底行模式。
	切换到命令行模式：按Esc键；
	切换到插入模式：按 i 、o、a键；
		i 在当前位置生前插入
		I 在当前行首插入
		a 在当前位置后插入
		A 在当前行尾插入
		o 在当前行之后插入一行
		O 在当前行之前插入一行

	切换到底行模式：按 :（冒号）；

管道 | ★
	重要的一个概念，其作用是将一个命令的输出用作另一个命令的输入
	例如:
		在ifconfig的结果里查找 192.168字符串
		ifconfig | grep 192.168
	以后常用
		查找和java相关的进程
		ps -ef | grep java
		查找和3306相关的信息
		ps -ef | grep 3306
	
			
系统管理命令
	date 显示或设置系统时间
		date  显示当前系统时间
		date -s “2014-01-01 10:10:10“  设置系统时间
				
	clear 清屏
		ctrl+l
		
	ps 正在运行的某个进程的状态
		ps –ef  查看所有进程
		★ps –ef | grep ssh 查找某一进程
	
	kill 杀掉某一进程
		kill 2868  杀掉2868编号的进程
		★kill -9 2868  强制杀死进程
		
网络管理
	ifconfig:查看所有的网络设置
		ifconfig 网卡名称 down :禁用网卡
		ifconfig 网卡名称 up :启用网卡
	
	ping:和window中一样
		通过ctrl+c取消
		
	netstat 查看网络端口。
		netstat -an | grep 3306 查询3306端口占用情况
	
	
////////////////////////////////

	了解用户管理
		添加
			useradd 用户名:默认会在home目录下给一个用户创建一个目录
			passwd 用户名: 回车输入密码
		
			useradd 用户名 -d /home/目录:创建一个用户然后在指定该用户的家目录
		
		删除
			userdel 用户名:只是删除用户 但是不删除家目录
			userdel -r 用户名:删除用户连带家目录一起删除
			
		切换用户:
			ssh -l 用户名 -p 22 主机
				例如: ssh -l tom -p 22 192.168.17.131
			su - 用户名
			
	了解组管理
		添加
			groupadd 组名
			useradd 用户名 -g 组名
		删除
			groupdel 组名
				注意:
					若组下有用户,删除不了

	///////////////////////////////////////////////////////////////	
文件的权限:
	普通文件： 包括文本文件、数据文件、可执行的二进制程序文件等。 
	目录文件： Linux系统把目录看成是一种特殊的文件，利用它构成文件系统的树型结构。  
	设备文件： Linux系统把每一个设备都看成是一个文件
	
	通过ll展示的列表
		以 d 开始的是目录文件
		以 - 开始的是普通文件
		
	文件的权限9个字母 三个三个一组
		第一组代表的是当前用户的权限
		第二组代表的是组的权限
		第三组代表的是其他用户的权限
		
		r:读  	4
		w:写	2
		x:执行	1
		
	chmod 变更文件或目录的权限。
		chmod 755 a.txt 
		chmod u=rwx,g=rx,o=rx a.txt
		chmod 000 a.txt  / 
		★chmod 777 a.txt
		
	了解:chown 变更文件或目录改文件所属用户和组
		chown u1:public a.txt	：变更当前的目录或文件的所属用户和组
		chown -R u1:public dir	：变更目录中的所有的子目录及文件的所属用户和组
		格式:
			chown 用户:组 文件